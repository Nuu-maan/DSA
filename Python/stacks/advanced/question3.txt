Basic Calculator III

Problem Description:
Implement a basic calculator to evaluate a string expression that can contain:
- Parentheses: ( and )
- Addition: +
- Subtraction: -
- Multiplication: *
- Division: /
- Non-negative integers
- Spaces

The expression string may contain multiple levels of nested parentheses.
Division between two integers should truncate toward zero.
You may assume that the given expression is always valid.

Example 1:
Input: s = "1+1"
Output: 2

Example 2:
Input: s = "6-4/2"
Output: 4

Example 3:
Input: s = "2*(5+5*2)/3+(6/2+8)"
Output: 21

Example 4:
Input: s = "(2+6*3+5-(3*14/7+2)*5)+3"
Output: -12

Example 5:
Input: s = "0"
Output: 0

Constraints:
- 1 <= s.length <= 10^4
- s consists of digits, '+', '-', '*', '/', '(', ')', and ' '
- s is a valid expression
- The result is in the range [-2^31, 2^31 - 1]
- Division by zero is not possible

Notes:
- Use two stacks: one for numbers and one for operators
- Handle operator precedence correctly
- Process parentheses recursively
- Handle multi-digit numbers
- Consider using a recursive descent parser
- Time complexity should be O(n)
- Space complexity should be O(n)

Source: LeetCode Very Hard
Link: https://leetcode.com/problems/basic-calculator-iii/ 