Infix to Postfix Expression Conversion

Problem Description:
Convert an infix expression to postfix notation using a stack. The infix expression contains single-digit operands and the following operators: +, -, *, /, ^, (, ).

Rules for conversion:
1. Scan the infix expression from left to right
2. If the character is an operand, output it
3. If the character is an operator:
   - If stack is empty or contains '(', push the operator
   - If the operator has higher precedence than the top of stack, push it
   - Else pop and output operators from stack until a lower precedence operator is found
4. If the character is '(', push it
5. If the character is ')', pop and output operators until '(' is found
6. After scanning the expression, pop and output all operators from the stack

Operator Precedence (highest to lowest):
^ (exponentiation)
*, / (multiplication, division)
+, - (addition, subtraction)

Input Format:
- First line contains the number of test cases T
- Next T lines each contain an infix expression

Output Format:
- For each test case, print the equivalent postfix expression

Sample Input:
3
a+b*(c^d-e)^(f+g*h)-i
A*(B+C)/D
(A+B)*(C+D)

Sample Output:
abcd^e-fgh*+^*+i-
ABC+*D/
AB+CD+*

Constraints:
- 1 <= T <= 100
- Expression length <= 100
- Expression contains only single-character operands (a-z, A-Z)
- Expression is valid and well-formed

Source: GeeksforGeeks
Link: https://www.geeksforgeeks.org/stack-set-2-infix-to-postfix/ 