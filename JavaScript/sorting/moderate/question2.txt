Find the Kth Smallest Sum of a Matrix With Sorted Rows

Problem: You are given an m x n matrix mat that has been sorted in non-decreasing order, and an integer k. You are also given that each row in the matrix is sorted in non-decreasing order. You need to find the kth smallest array among all possible arrays built from elements of each row in the matrix where rows are sorted in ascending order.

Example 1:
Input: mat = [[1,3,11],[2,4,6]], k = 5
Output: 7
Explanation: The 5th smallest number is 7.
The arrays are [1,2], [1,4], [3,2], [3,4], [1,6], [3,6], [11,2], [11,4], [11,6].
The 5th smallest is 7, which comes from [1,6].

Example 2:
Input: mat = [[1,3,11],[2,4,6]], k = 9
Output: 17

Example 3:
Input: mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7
Output: 9
Explanation: The 7th smallest number is 9.
The arrays are [1,1,2], [1,1,3], [1,4,2], [1,4,3], [10,1,2], [10,1,3], [1,5,2], [1,5,3], [10,4,2], [10,4,3], [10,5,2], [10,5,3].
The 7th smallest is 9, which comes from [1,5,3].

Constraints:
- m == mat.length
- n == mat.length[i]
- 1 <= m, n <= 40
- 1 <= mat[i][j] <= 5000
- 1 <= k <= min(200, n ^ m)
- mat[i] is a non-decreasing array.

Source: https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/
