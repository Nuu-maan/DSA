Problem: Find first and last occurrences of an element in a sorted array
Source: https://www.geeksforgeeks.org/find-first-and-last-positions-of-an-element-in-a-sorted-array/

Given a sorted array with possibly duplicate elements, the task is to find indexes of the first and last occurrences of an element x in the given array.

Input:
- A sorted array arr[] of n elements with possible duplicates
- An element x to be searched in the array

Output:
- Return the first and last index of x in the array
- Return [-1, -1] if the element is not found

Example:
Input: arr = [1, 3, 5, 5, 5, 5, 67, 123, 125], x = 5
Output: [2, 5]
Explanation: First occurrence of 5 is at index 2 and last occurrence is at index 5.

Input: arr = [1, 3, 5, 5, 5, 5, 7, 123, 125], x = 7
Output: [6, 6]
Explanation: Only one occurrence of 7 is present at index 6.

Note: The algorithm should run in O(log n) time complexity.
